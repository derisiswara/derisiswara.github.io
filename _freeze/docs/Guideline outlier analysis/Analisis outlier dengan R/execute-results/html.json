{
  "hash": "3d70b487ab1e1426956d72c98c7e7203",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Analisis outlier dengan R\"\nformat:\n  html:\n    toc: true\n---\n\n\n\n\n## IQR\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Buat data sampel\nset.seed(123)\ndata <- data.frame(\n  ID = 1:50,\n  Value = c(rnorm(45, mean = 50, sd = 10), rnorm(5, mean = 100, sd = 5)) # 5 outlier\n)\n\nboxplot(data$Value)\n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n# Hitung IQR\nQ1 <- quantile(data$Value, 0.25)\nQ3 <- quantile(data$Value, 0.75)\nIQR_value <- Q3 - Q1\n\n# Tentukan batas bawah dan atas\nlower_bound <- Q1 - 1.5 * IQR_value\nupper_bound <- Q3 + 1.5 * IQR_value\n\n# Deteksi outlier\ndata$Outlier <- ifelse(data$Value < lower_bound | data$Value > upper_bound, \"Yes\", \"No\")\n\n# Visualisasi dengan scatter plot\nggplot(data, aes(x = ID, y = Value, color = Outlier)) +\n  geom_point(size = 3) +\n  geom_hline(yintercept = lower_bound, linetype = \"dashed\", color = \"red\") +\n  geom_hline(yintercept = upper_bound, linetype = \"dashed\", color = \"red\") +\n  labs(title = \"Scatterplot dengan Outlier\", x = \"ID\", y = \"Value\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\nID 46-50 terdeteksi sebagai outlier.\n\n## Z-Score\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hitung z-score\nz_scores <- scale(data$Value)\n\n# Tentukan batas z-score\nthreshold <- 3\n\n# Deteksi outlier\ndata$Outlier <- ifelse(abs(z_scores) > threshold, \"Yes\", \"No\")\n\n# Visualisasi dengan scatter plot\nggplot(data, aes(x = ID, y = Value, color = Outlier)) +\n  geom_point(size = 3) +\n  geom_hline(yintercept = mean(data$Value) + threshold * sd(data$Value), linetype = \"dashed\", color = \"red\") +\n  geom_hline(yintercept = mean(data$Value) - threshold * sd(data$Value), linetype = \"dashed\", color = \"red\") +\n  labs(title = \"Scatterplot dengan Outlier\", x = \"ID\", y = \"Value\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\nDengan menggunakan z-score, ID 46-50 tidak terdeteksi sebagai outlier.\n\n## Modified Z-Score\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hitung Modified Z-Score\nmedian_value <- median(data$Value)\nmad_value <- mad(data$Value)\nmod_z_scores <- 0.6745 * (data$Value - median_value) / mad_value\n\n# Tentukan batas Modified Z-Score\nthreshold <- 3\n\n# Deteksi outlier\ndata$Outlier <- ifelse(abs(mod_z_scores) > threshold, \"Yes\", \"No\")\n\n# Visualisasi dengan scatter plot\nggplot(data, aes(x = ID, y = Value, color = Outlier)) +\n  geom_point(size = 3) +\n  geom_hline(yintercept = median_value + threshold * mad_value / 0.6745, linetype = \"dashed\", color = \"red\") +\n  geom_hline(yintercept = median_value - threshold * mad_value / 0.6745, linetype = \"dashed\", color = \"red\") +\n  labs(title = \"Scatterplot dengan Outlier\", x = \"ID\", y = \"Value\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\nDengan menggunakan Modified Z-Score, hanya ID 49-50 yang terdeteksi sebagai outlier.\n\n## Cluster Based \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Clustering untuk deteksi outlier\nlibrary(cluster)\nkmeans_result <- kmeans(data$Value, centers = 2) # Dua klaster: normal dan outlier\n\ndata$Cluster <- as.factor(kmeans_result$cluster)\n\n# Tentukan outlier sebagai anggota cluster terkecil\ncluster_sizes <- table(kmeans_result$cluster)\noutlier_cluster <- as.numeric(names(cluster_sizes)[which.min(cluster_sizes)])\ndata$Outlier <- ifelse(data$Cluster == outlier_cluster, \"Yes\", \"No\")\n\n# Visualisasi dengan scatter plot\nggplot(data, aes(x = ID, y = Value, color = Outlier)) +\n  geom_point(size = 3) +\n  labs(title = \"Scatterplot dengan Outlier\", x = \"ID\", y = \"Value\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nMetode berbasis klaster seperti k-means tidak menetapkan batas ambang (threshold) eksplisit seperti metode IQR atau Z-Score.\n\n## K-Nearest Neighbors\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Deteksi outlier dengan k-NN\nlibrary(FNN)\n\n# Tentukan jumlah tetangga terdekat\nk <- 5\n\n# Hitung jarak rata-rata ke k tetangga terdekat\nnn_distances <- knn.dist(data$Value, k = k)\ndata$Mean_Distance <- rowMeans(nn_distances)\n\n# Tetapkan ambang batas sebagai persentil tertentu\nthreshold <- quantile(data$Mean_Distance, 0.95)\ndata$Outlier <- ifelse(data$Mean_Distance > threshold, \"Yes\", \"No\")\n\n# Visualisasi dengan scatter plot\nggplot(data, aes(x = ID, y = Value, color = Outlier)) +\n  geom_point(size = 3) +\n  labs(title = \"Scatterplot dengan Outlier\", x = \"ID\", y = \"Value\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n## Local Outlier Factor (LOF)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# remotes::install_github(\"cran/DMwR\")\nlibrary(DMwR)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: lattice\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: grid\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n\n\n:::\n\n```{.r .cell-code}\nk = 5\ndata$LOF_Score <- lofactor(data$Value, k = k)\n\n# Tetapkan outlier berdasarkan threshold\nthreshold <- quantile(data$LOF_Score, 0.95)\ndata$Outlier <- ifelse(data$LOF_Score > threshold, \"Yes\", \"No\")\n\n# Visualisasi dengan scatter plot\nggplot(data, aes(x = ID, y = Value, color = Outlier)) +\n  geom_point(size = 3) +\n  labs(title = \"Scatterplot dengan Outlier\", x = \"ID\", y = \"Value\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nPemilihan nilai k yang tepat sangat penting dalam metode LOF atau pun proximity-based lainnya. Selain itu, data tidak terlalu cocok untuk metode ini karena hanya ada satu variabel dan tidak ada pola jarak yang jelas.\n\n## Isolation Forest\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(isotree)\niso_forest <- isolation.forest(as.matrix(data$Value))\ndata$Isolation_Score <- predict(iso_forest, as.matrix(data$Value), type = \"score\")\n\n# Tetapkan outlier berdasarkan threshold\ndata$Outlier <- ifelse(data$Isolation_Score > 0.5, \"Yes\", \"No\")\n\n# Visualisasi dengan scatter plot\nggplot(data, aes(x = ID, y = Value, color = Outlier)) +\n  geom_point(size = 3) +\n  labs(title = \"Scatterplot dengan Outlier\", x = \"ID\", y = \"Value\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n## Mahalanobis distance to find outliers\nMahalanobis Distance ($D^2$) digunakan untuk mendeteksi outlier dalam data multivariat. Formula dasarnya adalah:\n\n$$\nD^2 = (x - \\mu)^T S^{-1} (x - \\mu)\n$$\n\ndi mana:\n\n- $x$ adalah vektor pengamatan.\n- $\\mu$ adalah vektor rata-rata dari data.\n- $S$ adalah matriks kovarians dari data.\n- $S^{-1}$ adalah invers dari matriks kovarians.\n\nDalam implementasi R, Mahalanobis Distance dapat dihitung menggunakan fungsi `mahalanobis()`:\n\nContoh:\n\n`Manual`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhw <- data.frame(Height.cm=c(164, 167, 168, 169, 169, \n                             170, 170, 170, 171, 172, 172, 173, 173, 175, 176, 178),\n                 Weight.kg=c( 54,  57,  58,  60,  61,  \n                              60,  61,  62,  62,  64,  62,  62,  64,  56,  66,  70)) \n\nis.height.outlier <- abs(scale(hw$Height.cm)) > 2\nis.weight.outlier <- abs(scale(hw$Weight.kg)) > 2\npch               <- (is.height.outlier | is.weight.outlier) * 16\n\nplot(hw, pch=pch) \n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n\nDengan fungsi `mahalanobis()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn.outliers   <- 2 # Mark as outliers the 2 most extreme points\nm.dist.order <- order(mahalanobis(hw, colMeans(hw), cov(hw)), decreasing=TRUE)\nis.outlier   <- rep(FALSE, nrow(hw))\nis.outlier[m.dist.order[1:n.outliers]] <- TRUE\npch <- is.outlier * 16\nplot(hw, pch=pch) \n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn.outliers   <- 3 # Mark as outliers the 2 most extreme points\nm.dist.order <- order(mahalanobis(hw, colMeans(hw), cov(hw)), decreasing=TRUE)\nis.outlier   <- rep(FALSE, nrow(hw))\nis.outlier[m.dist.order[1:n.outliers]] <- TRUE\npch <- is.outlier * 16\nplot(hw, pch=pch)\n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n### 3D Data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rgl)\nhwa <- data.frame(Height.cm=c(164, 167, 168, 168, 169, \n                              169, 169, 170, 172, 173, 175, 176, 178),\n                  Weight.kg=c( 55,  57,  58,  56,  57,  \n                               61,  61,  61,  64,  62,  56,  66,  70),\n                  Age      =c( 13,  12,  14,  17,  15,  14,  \n                               16,  16,  13,  15,  16,  14,  16))\n\nm.dist.order <- order(mahalanobis(hwa, colMeans(hwa), cov(hwa)), decreasing=TRUE)\n\nis.outlier <- rep(FALSE, nrow(hwa))\n\nis.outlier[m.dist.order[1:2]] <- TRUE # Mark as outliers the 2 most extreme points\n\ncol <- is.outlier + 1\n\nlibrary(scatterplot3d)\nscatterplot3d(hwa$Height.cm, hwa$Weight.kg, hwa$Age, pch=16, color=col, angle=30)\n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n### Nonlinear relationships\n\nKurang bekerja dengan baik pada data non-linear.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy.dataframe <- data.frame(x=c(4,  8, 10, 16, 17, 22, 27, 33, 38, 40, 47, 48, \n                               53, 55, 63, 71, 76, 85, 85, 92, 96),\n                           y=c(6, 22, 32, 34, 42, 51, 59, 63, 64, 69, 70, 20, \n                               70, 63, 63, 55, 46, 41, 33, 19,  6))\n\npercentage.of.outliers        <- 10 # Mark 10% of points as outliers\n\nnumber.of.outliers            <- trunc(nrow(my.dataframe) * percentage.of.outliers / 100)\n\nm.dist                        <- mahalanobis(my.dataframe, colMeans(my.dataframe),\n                                             cov(my.dataframe))\n\nm.dist.order                  <- order(m.dist, decreasing=TRUE)\n\nrows.not.outliers             <- m.dist.order[(number.of.outliers+1):nrow(my.dataframe)]\n\nis.outlier                    <- rep(TRUE, nrow(my.dataframe))\n\nis.outlier[rows.not.outliers] <- FALSE\n\npch                           <- is.outlier * 16\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x=my.dataframe$x, y=my.dataframe$y, pch=pch)\n```\n\n::: {.cell-output-display}\n![](Analisis-outlier-dengan-R_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n## Prediction-based outlier detection in streaming time series\n### Arima\n### LSTM\n\n## Ensamble outlier analysis\n\n## Supervised\n\n",
    "supporting": [
      "Analisis-outlier-dengan-R_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}